// Mocks generated by Mockito 5.3.2 from annotations
// in stackwallet/test/widget_tests/table_view/table_view_row_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i11;

import 'package:flutter/foundation.dart' as _i4;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stackwallet/services/coins/manager.dart' as _i6;
import 'package:stackwallet/services/node_service.dart' as _i3;
import 'package:stackwallet/services/wallets.dart' as _i7;
import 'package:stackwallet/services/wallets_service.dart' as _i2;
import 'package:stackwallet/utilities/enums/coin_enum.dart' as _i8;
import 'package:stackwallet/utilities/prefs.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWalletsService_0 extends _i1.SmartFake
    implements _i2.WalletsService {
  _FakeWalletsService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNodeService_1 extends _i1.SmartFake implements _i3.NodeService {
  _FakeNodeService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChangeNotifierProvider_2<Notifier extends _i4.ChangeNotifier?>
    extends _i1.SmartFake implements _i5.ChangeNotifierProvider<Notifier> {
  _FakeChangeNotifierProvider_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeManager_3 extends _i1.SmartFake implements _i6.Manager {
  _FakeManager_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Wallets].
///
/// See the documentation for Mockito's code generation for more information.
class MockWallets extends _i1.Mock implements _i7.Wallets {
  MockWallets() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WalletsService get walletsService => (super.noSuchMethod(
        Invocation.getter(#walletsService),
        returnValue: _FakeWalletsService_0(
          this,
          Invocation.getter(#walletsService),
        ),
      ) as _i2.WalletsService);
  @override
  set walletsService(_i2.WalletsService? _walletsService) => super.noSuchMethod(
        Invocation.setter(
          #walletsService,
          _walletsService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.NodeService get nodeService => (super.noSuchMethod(
        Invocation.getter(#nodeService),
        returnValue: _FakeNodeService_1(
          this,
          Invocation.getter(#nodeService),
        ),
      ) as _i3.NodeService);
  @override
  set nodeService(_i3.NodeService? _nodeService) => super.noSuchMethod(
        Invocation.setter(
          #nodeService,
          _nodeService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasWallets => (super.noSuchMethod(
        Invocation.getter(#hasWallets),
        returnValue: false,
      ) as bool);
  @override
  List<_i5.ChangeNotifierProvider<_i6.Manager>> get managerProviders =>
      (super.noSuchMethod(
        Invocation.getter(#managerProviders),
        returnValue: <_i5.ChangeNotifierProvider<_i6.Manager>>[],
      ) as List<_i5.ChangeNotifierProvider<_i6.Manager>>);
  @override
  List<_i6.Manager> get managers => (super.noSuchMethod(
        Invocation.getter(#managers),
        returnValue: <_i6.Manager>[],
      ) as List<_i6.Manager>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String> getWalletIdsFor({required _i8.Coin? coin}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletIdsFor,
          [],
          {#coin: coin},
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  Map<_i8.Coin, List<_i5.ChangeNotifierProvider<_i6.Manager>>>
      getManagerProvidersByCoin() => (super.noSuchMethod(
            Invocation.method(
              #getManagerProvidersByCoin,
              [],
            ),
            returnValue: <_i8.Coin,
                List<_i5.ChangeNotifierProvider<_i6.Manager>>>{},
          ) as Map<_i8.Coin, List<_i5.ChangeNotifierProvider<_i6.Manager>>>);
  @override
  _i5.ChangeNotifierProvider<_i6.Manager> getManagerProvider(
          String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagerProvider,
          [walletId],
        ),
        returnValue: _FakeChangeNotifierProvider_2<_i6.Manager>(
          this,
          Invocation.method(
            #getManagerProvider,
            [walletId],
          ),
        ),
      ) as _i5.ChangeNotifierProvider<_i6.Manager>);
  @override
  _i6.Manager getManager(String? walletId) => (super.noSuchMethod(
        Invocation.method(
          #getManager,
          [walletId],
        ),
        returnValue: _FakeManager_3(
          this,
          Invocation.method(
            #getManager,
            [walletId],
          ),
        ),
      ) as _i6.Manager);
  @override
  void addWallet({
    required String? walletId,
    required _i6.Manager? manager,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #addWallet,
          [],
          {
            #walletId: walletId,
            #manager: manager,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeWallet({required String? walletId}) => super.noSuchMethod(
        Invocation.method(
          #removeWallet,
          [],
          {#walletId: walletId},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<void> load(_i10.Prefs? prefs) => (super.noSuchMethod(
        Invocation.method(
          #load,
          [prefs],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> loadAfterStackRestore(
    _i10.Prefs? prefs,
    List<_i6.Manager>? managers,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadAfterStackRestore,
          [
            prefs,
            managers,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
