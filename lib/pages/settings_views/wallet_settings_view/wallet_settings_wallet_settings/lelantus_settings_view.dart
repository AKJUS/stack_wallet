/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

import '../../../../providers/db/main_db_provider.dart';
import '../../../../providers/global/wallets_provider.dart';
import '../../../../themes/stack_colors.dart';
import '../../../../utilities/text_styles.dart';
import '../../../../wallets/crypto_currency/crypto_currency.dart';
import '../../../../wallets/isar/models/wallet_info.dart';
import '../../../../wallets/wallet/wallet.dart';
import '../../../../widgets/background.dart';
import '../../../../widgets/custom_buttons/app_bar_icon_button.dart';
import '../../../../widgets/custom_buttons/draggable_switch_button.dart';

class LelantusSettingsView extends ConsumerStatefulWidget {
  const LelantusSettingsView({
    super.key,
    required this.walletId,
  });

  static const String routeName = "/lelantusSettings";

  final String walletId;

  @override
  ConsumerState<LelantusSettingsView> createState() =>
      _LelantusSettingsViewState();
}

class _LelantusSettingsViewState extends ConsumerState<LelantusSettingsView> {
  late final TextEditingController _controller;
  late final String walletId;

  final _focusNode = FocusNode();

  bool _isInitialized = false;
  Wallet<CryptoCurrency>? wallet;
  bool? enableLelantusScanning = false;

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    if (!_isInitialized) {
      // Get the wallet.
      wallet = ref.watch(
        pWallets.select(
          (value) => value.getWallet(widget.walletId),
        ),
      );

      // Parse otherDataJsonString to get the enableLelantusScanning value.
      if (wallet?.info.otherDataJsonString != null) {
        final otherDataJson = json.decode(wallet!.info.otherDataJsonString!);
        enableLelantusScanning =
            otherDataJson[WalletInfoKeys.enableLelantusScanning] as bool? ??
                false;
      }

      _isInitialized = true; // Ensure this logic runs only once
    }
  }

  @override
  void dispose() {
    _controller.dispose();
    _focusNode.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Background(
      child: Scaffold(
        backgroundColor: Theme.of(context).extension<StackColors>()!.background,
        appBar: AppBar(
          leading: AppBarBackButton(
            onPressed: () {
              Navigator.of(context).pop();
            },
          ),
          title: Text(
            "Lelantus settings",
            style: STextStyles.navBarTitle(context),
          ),
        ),
        body: Padding(
          padding: const EdgeInsets.all(16),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              Row(
                children: [
                  SizedBox(
                    height: 20,
                    width: 40,
                    child: DraggableSwitchButton(
                      isOn: enableLelantusScanning ?? false,
                      onValueChanged: (newValue) {
                        // Toggle enableLelantusScanning in wallet info.
                        wallet?.info.updateOtherData(newEntries: {
                          WalletInfoKeys.enableLelantusScanning:
                              !(enableLelantusScanning ?? false)
                        }, isar: ref.read(mainDBProvider).isar).then((value) {
                          // Should setState be used here?
                          enableLelantusScanning =
                              !(enableLelantusScanning ?? false);
                        });
                      },
                    ),
                  ),
                  const SizedBox(
                    width: 16,
                  ),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        "Scan for Lelantus transactions",
                        style: STextStyles.smallMed12(context),
                      ),
                      // Text(
                      //   detail,
                      //   style: STextStyles.desktopTextExtraExtraSmall(context),
                      // ),
                    ],
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}
